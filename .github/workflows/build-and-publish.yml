name: Build and Publish Web Components

on:
  push:
    branches:
      - main

jobs:
  build-and-publish:

    permissions:
      id-token: write
      contents: write
      packages: write

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Increment version
        run: |
          git config user.email ""
          git config user.name ""
          npm --no-git-tag-version version patch

      - name: Commit package.json
        run: |
          echo "Committing changes..."
          VERSION=$(node -p "require('./package.json').version")
          file=package.json
          CONTENT=$(base64 -w 0 $file)
          FILENAME=$(basename $file)
          SHA=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/contents/$file?ref=main | jq -r .sha)
          if [ "$SHA" == "null" ]; then
           SHA=""
          fi
          curl -s -X PUT -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
           -d "{\"message\":\"[skip actions] new version $VERSION\", \"content\":\"$CONTENT\", \"branch\":\"main\", \"sha\":\"$SHA\"}" \
           https://api.github.com/repos/${{ github.repository }}/contents/$file

      - name: Install dependencies
        run: yarn install

      - name: Build web components
        run: yarn build

      - name: Configure GitHub Package Registry
        run: |
          npm config set //npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}
          npm config set @felleslosninger:registry=https://npm.pkg.github.com/

      #################################
      # Publish to GitHub Packages
      ################################
      - name: Publish to GitHub Packages
        run: npm publish

      #################################
      # Publish to MinID CDN
      ################################
      - name: Build CDN version
        run: yarn build:cdn

      - name: Setup SSH Deploy Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.CDN_DEPLOY_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Clone CDN Repo (using SSH)
        run: |
          git clone git@github.com:felleslosninger/minid-cdn.git cdn

      - name: Create Versioned Folder in CDN Repo
        run: |
          cd cdn
          VERSION=$(node -p "require('../package.json').version")
          mkdir -p minid-elements/$VERSION
          echo $VERSION > minid-elements/version.txt
          ln -sfn minid-elements/$VERSION minid-elements/latest

      - name: Copy CDN Files to Versioned Folder
        run: |
          cp -r dist-cdn/* cdn/minid-elements/$VERSION

#      - name: Commit Changes to CDN Repo (using SSH)
#        run: |
#          cd cdn
##          git config user.name 'github-actions[bot]'
##          git config user.email 'github-actions[bot]@users.noreply.github.com'
#          git add .
#          git commit -m "[skip actions] Deploy version $VERSION to CDN"
#          git push origin main

#      - name: Commit Changes to CDN Repo (using API)
#        run: |
#          cd cdn
#          FILES=$(git ls-files -m)
#          for FILE in $FILES; do
#            CONTENT=$(base64 -w 0 $FILE)
#            FILENAME=$(basename $FILE)
#            SHA=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_SECRET }}" https://api.github.com/repos/felleslosninger/minid-cdn/contents/$FILE?ref=main | jq -r .sha)
#            if [ "$SHA" == "null" ]; then
#              SHA=""
#            fi
#            echo "Committing $FILE..."
#            curl -s -X PUT -H "Authorization: token ${{ secrets.GITHUB_SECRET }}" \
#              -d "{\"message\":\"[skip actions] Deploy version $VERSION to CDN\", \"content\":\"$CONTENT\", \"branch\":\"main\", \"sha\":\"$SHA\"}" \
#              https://api.github.com/repos/felleslosninger/minid-cdn/contents/$FILE
#          done

#      - name: Commit Changes to CDN Repo (using API with Git)
#        run: |
#          cd cdn
#          git add .
#          git commit -m "Deploy version $VERSION to CDN"
#
#          # Get the latest commit SHA
#          SHA=$(git rev-parse HEAD)
#
#          # Create a tree object with all changes
#          TREE_SHA=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
#            -X POST -d "{\"tree\": $(git ls-tree -r $SHA --name-only | xargs -I {} sh -c 'echo \"{\\\"path\\\": \\\"{}\\\", \\\"mode\\\": \\\"100644\\\", \\\"type\\\": \\\"blob\\\", \\\"sha\\\": \\\"$(git rev-parse $SHA:{})\\\"}"')}" \
#            https://api.github.com/repos/felleslosninger/minid-cdn/git/trees | jq -r '.sha')
#
#          # Create a commit object pointing to the tree
#          COMMIT_SHA=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
#            -X POST -d "{\"message\": \"Deploy version $VERSION to CDN\", \"tree\": \"$TREE_SHA\", \"parents\": [\"$SHA\"]}" \
#            https://api.github.com/repos/felleslosninger/minid-cdn/git/commits | jq -r '.sha')
#
#          # Update the main branch to point to the new commit
#          curl -s -X PATCH -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
#            -d "{\"sha\": \"$COMMIT_SHA\"}" \
#            https://api.github.com/repos/felleslosninger/minid-cdn/git/refs/heads/main
